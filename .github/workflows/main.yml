name: Test

on:
  push:
    paths-ignore:
      - '/jmeterDocs/**'
      - 'README'
  pull_request:
    branches:
      - main
    paths-ignore:
      - '/jmeterDocs/**'
      - 'README'

jobs:
  test:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Start containers
        run: docker compose -f "docker-compose.yml" up -d db redis --build --wait

      - name: Install go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'
          cache-dependency-path: src/go.sum

      - name: Install dependencies
        run: go get .
        working-directory: ./src

      - name: Wait for MySQL to be ready
        run: |
          SERVER="127.0.0.1"
          USER="root"
          MAX_RETRIES=30
          RETRY_INTERVAL=5

          echo "Waiting for MySQL to be ready..."

          for i in $(seq 1 $MAX_RETRIES); do
            if mysql -u $USER -h $SERVER -e "SELECT 1;" > /dev/null 2>&1; then
              echo "MySQL is ready!"
              exit 0
            fi
            echo "Attempt $i/$MAX_RETRIES: MySQL is not ready yet. Retrying in $RETRY_INTERVAL seconds..."
            sleep $RETRY_INTERVAL
          done

          echo "MySQL did not become ready within the expected time."
          exit 1

      - name: Run build
        run: go build -v
        working-directory: ./src

      - name: Run tests
        run: go test -v
        working-directory: ./src/tests
        #continue-on-error: true
        env:
          GIN_MODE: release
          REDIS_IP: localhost
          MYSQL_USERNAME: root
          MYSQL_IP: localhost
          MYSQL_PORT: 3306
          MYSQL_DATABASE: AdDeliveryLink

      # for test
      #- name: Setup tmate session
      #  uses: mxschmitt/action-tmate@v3

      - name: Stop containers
        if: always()
        run: docker compose -f "docker-compose.yml" down
  build-app:
    needs: 
      - test
    uses: ./.github/workflows/app-docker-image.yml
    secrets: inherit
    permissions:
      contents: read
      packages: write
  build-db:
        needs: 
          - test
        uses: ./.github/workflows/db-docker-image.yml
        secrets: inherit
        permissions:
          contents: read
          packages: write