// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/ad": {
            "get": {
                "description": "Gets a list of advertisements that match the specified conditions.",
                "tags": [
                    "Advertisement"
                ],
                "summary": "Gets a list of advertisements",
                "parameters": [
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "name": "age",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "country",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "F",
                            "M"
                        ],
                        "type": "string",
                        "name": "gender",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "ios",
                            "android",
                            "web"
                        ],
                        "type": "string",
                        "name": "platform",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.Response"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "post": {
                "description": "Creates a new advertisement with the specified title, start and end dates, and conditions.",
                "tags": [
                    "Advertisement"
                ],
                "summary": "Creates a new advertisement",
                "parameters": [
                    {
                        "description": "Advertisement information",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.Body"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.Body": {
            "type": "object",
            "required": [
                "conditions",
                "endAt",
                "startAt",
                "title"
            ],
            "properties": {
                "conditions": {
                    "$ref": "#/definitions/dto.Conditions"
                },
                "endAt": {
                    "type": "string"
                },
                "startAt": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "dto.Conditions": {
            "type": "object",
            "properties": {
                "ageEnd": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "ageStart": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "country": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "gender": {
                    "type": "string",
                    "enum": [
                        "M",
                        "F"
                    ]
                },
                "platform": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "dto.Response": {
            "type": "object",
            "properties": {
                "EndAt": {
                    "type": "string"
                },
                "Title": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/v1/api",
	Schemes:          []string{},
	Title:            "Advertisement API",
	Description:      "a simple API for advertisement",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
