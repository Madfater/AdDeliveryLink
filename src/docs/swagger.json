{
    "swagger": "2.0",
    "info": {
        "description": "a simple API for advertisement",
        "title": "Advertisement API",
        "contact": {},
        "version": "1.0"
    },
    "basePath": "/v1/api",
    "paths": {
        "/ad": {
            "get": {
                "description": "Gets a list of advertisements that match the specified conditions.",
                "tags": [
                    "Advertisement"
                ],
                "parameters": [
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "name": "age",
                        "in": "query"
                    },
                    {
                      "enum": [
                        "CA",
                        "US",
                        "JP",
                        "TW"
                      ],
                        "type": "string",
                      "x-enum-varnames": [
                        "CA",
                        "US",
                        "JP",
                        "TW"
                      ],
                        "name": "country",
                      "in": "query"
                    },
                    {
                        "enum": [
                          "M",
                            "F",
                          "B"
                        ],
                        "type": "string",
                      "x-enum-varnames": [
                        "Male",
                        "Female",
                        "Both"
                      ],
                        "name": "gender",
                      "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "minimum": 0,
                        "type": "integer",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "enum": [
                          "android",
                            "ios",
                            "web"
                        ],
                        "type": "string",
                      "x-enum-varnames": [
                        "Android",
                        "IOS",
                        "Web"
                      ],
                        "name": "platform",
                      "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                          "$ref": "#/definitions/data.IResponse-data_GetAdsResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            },
            "post": {
                "description": "Creates a new advertisement with the specified title, start and end dates, and conditions.",
                "tags": [
                    "Advertisement"
                ],
                "parameters": [
                    {
                        "description": "Advertisement information",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                          "$ref": "#/definitions/data.CreateAdsReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                      "description": "OK",
                      "schema": {
                        "$ref": "#/definitions/data.IResponse-entity_Advertisement"
                      }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        }
    },
    "definitions": {
      "data.AdsConditions": {
            "type": "object",
            "required": [
              "country",
              "gender",
              "platform"
            ],
            "properties": {
                "ageEnd": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "ageStart": {
                    "type": "integer",
                    "maximum": 100,
                    "minimum": 1
                },
                "country": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/enum.CountryCode"
                    }
                },
                "gender": {
                  "$ref": "#/definitions/enum.Gender"
                },
                "platform": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/enum.Platform"
                    }
                }
            }
      },
      "data.CreateAdsReq": {
        "type": "object",
        "required": [
          "conditions",
          "endAt",
          "startAt",
          "title"
        ],
        "properties": {
          "conditions": {
            "$ref": "#/definitions/data.AdsConditions"
          },
          "endAt": {
            "type": "string",
            "example": "2021-01-01T00:00:00Z"
          },
          "startAt": {
            "type": "string",
            "example": "2021-01-01T00:00:00Z"
          },
          "title": {
            "type": "string"
          }
        }
      },
      "data.GetAdsResp": {
        "type": "object",
        "properties": {
          "ads": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/data.GetAdsRespItem"
            }
          }
        }
      },
      "data.GetAdsRespItem": {
        "type": "object",
        "properties": {
          "EndAt": {
            "type": "string"
          },
          "Title": {
            "type": "string"
          }
        }
      },
      "data.IResponse-data_GetAdsResp": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "result": {
            "$ref": "#/definitions/data.GetAdsResp"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "data.IResponse-entity_Advertisement": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "result": {
            "$ref": "#/definitions/entity.Advertisement"
          },
          "status": {
                    "type": "string"
                }
            }
      },
      "entity.Advertisement": {
        "type": "object",
        "properties": {
          "ageEnd": {
            "type": "integer"
          },
          "ageStart": {
            "type": "integer"
          },
          "country": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/entity.Country"
            }
          },
          "createdDate": {
            "type": "string"
          },
          "endAt": {
            "type": "string"
          },
          "gender": {
            "$ref": "#/definitions/enum.Gender"
          },
          "id": {
            "type": "integer"
          },
          "platform": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/entity.Platform"
            }
          },
          "startAt": {
            "type": "string"
          },
          "status": {
            "type": "boolean"
          },
          "title": {
            "type": "string"
          },
          "updatedDate": {
            "type": "string"
          }
        }
      },
      "entity.Country": {
        "type": "object",
        "properties": {
          "countryCode": {
            "$ref": "#/definitions/enum.CountryCode"
          }
        }
      },
      "entity.Platform": {
        "type": "object",
        "properties": {
          "platformName": {
            "$ref": "#/definitions/enum.Platform"
          }
        }
      },
      "enum.CountryCode": {
        "type": "string",
        "enum": [
          "CA",
          "US",
          "JP",
          "TW"
        ],
        "x-enum-varnames": [
          "CA",
          "US",
          "JP",
          "TW"
        ]
      },
      "enum.Gender": {
        "type": "string",
        "enum": [
          "M",
          "F",
          "B"
        ],
        "x-enum-varnames": [
          "Male",
          "Female",
          "Both"
        ]
      },
      "enum.Platform": {
        "type": "string",
        "enum": [
          "android",
          "ios",
          "web"
        ],
        "x-enum-varnames": [
          "Android",
          "IOS",
          "Web"
        ]
        }
    }
}